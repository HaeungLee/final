events {
    worker_connections 1024;
}

http {
    upstream spring_backend {
        server localhost:8080;
    }
    
    upstream node_backend {
        server localhost:3000;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # React 정적 파일 서빙 (기본)
        location / {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Spring 백엔드 (인증 관련)
        location /api/auth/ {
            proxy_pass http://spring_backend/api/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Spring 백엔드 (사용자 관련)
        location /api/member/ {
            proxy_pass http://spring_backend/api/member/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Spring 백엔드 (OAuth 토큰 관련 - 추후 구현)
        location /api/oauth-tokens/ {
            proxy_pass http://spring_backend/api/oauth-tokens/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Node.js 백엔드 (Agentica Functions)
        location /api/agent/ {
            proxy_pass http://node_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # WebSocket (Node.js)
        location /ws/ {
            proxy_pass http://node_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
} 